import streamlit as st
from agents.intake_agent import IntakeAgent
from agents.fault_analysis import FaultAnalysisAgent
from agents.document_generation_agent import DocumentGenerationAgent

DISCLAIMER = (
    "\n\n---\n"
    "This letter was generated by an AI assistant for draft and review purposes only. "
    "It is not legal advice. Please consult a qualified attorney before acting on its contents."
)

def main():
    st.title("Legal Document Generator (AI Assisted)")

    # Intake form
    client_name = st.text_input("Client Name")
    date_of_incident = st.date_input("Date of Incident")
    location = st.text_input("Incident Location")
    incident_description = st.text_area("Incident Description")
    police_report = st.checkbox("Police Report Filed?")
    witnesses = st.text_area("Witnesses (comma-separated)")

    # Input validation before agent call
    if st.button("Analyze Fault"):
        # Check required fields
        missing = []
        if not client_name: missing.append("client_name")
        if not date_of_incident: missing.append("date_of_incident")
        if not incident_description: missing.append("incident_description")
        if missing:
            st.error(f"Missing required fields: {', '.join(missing)}")
            return

        intake_data = {
            "client_name": client_name,
            "date_of_incident": str(date_of_incident),
            "location": location,
            "incident_description": incident_description,
            "police_report": police_report,
            "witnesses": [w.strip() for w in witnesses.split(",") if w.strip()]
        }

        # Run Intake Agent (optional in your flow)
        intake_agent = IntakeAgent()
        intake_result = intake_agent.process(intake_data)

        # Run Fault Analysis Agent
        fault_agent = FaultAnalysisAgent()
        analysis = fault_agent.analyze(intake_data)

        # Run Document Generation Agent
        doc_agent = DocumentGenerationAgent()
        doc_result = doc_agent.generate(intake_data, analysis)

        # Add disclaimer to document
        if "document" in doc_result:
            doc_result["document"] += DISCLAIMER

        # Human review step before allowing download
        st.subheader("Draft Letter (Review Required)")
        st.markdown(doc_result.get("document", "No document generated."))
        st.warning("This is an AI-generated draft. Please review before sending to the client.")
        if st.button("Mark as Reviewed by Attorney"):
            st.success("Document marked as reviewed and ready for further action.")

if __name__ == "__main__":
    main()